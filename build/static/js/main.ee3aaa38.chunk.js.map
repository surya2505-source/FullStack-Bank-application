{"version":3,"sources":["utils/constants.js","actions/errors.js","reducers/auth.js","reducers/errors.js","reducers/profile.js","store/store.js","utils/common.js","utils/api.js","actions/profile.js","actions/auth.js","components/Login.js","components/Register.js","components/Profile.js","components/Header.js","components/Logout.js","router/AppRouter.js","index.js"],"names":["BASE_API_URL","getErrors","errors","type","authReducer","state","action","user","errorsReducer","profileReducer","profile","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","auth","applyMiddleware","thunk","validateFields","fieldsToValidate","every","field","Object","values","updateStore","userid","email","dispatch","signIn","token","localStorage","getItem","initiateGetProfile","setAuthHeader","axios","defaults","headers","common","removeAuthHeader","get","url","params","a","shouldSetAuthHeader","shouldRemoveAuthHeader","result","post","updateProfile","initiateUpdateProfile","profileData","data","response","initiateLogin","password","setItem","history","push","console","log","registerNewUser","success","Login","errorMsg","handleLogin","event","preventDefault","setState","signin_error","props","handleInputChange","target","name","value","prevProps","_","isEqual","this","className","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Button","variant","to","React","Component","connect","Register","first_name","last_name","cpassword","successMsg","isSubmitted","registerUser","signup_error","then","Profile","handleSubmit","update_error","handleOnChange","isEmpty","Header","Logout","removeItem","createBrowserHistory","path","component","exact","user_token","currentPath","location","pathname","decoded","jwt_decode","maintainSession","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ee3aaa38.chunk.js","sourcesContent":["export const BASE_API_URL = 'http://localhost:5000';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const RESET_ERRORS = 'RESET_ERRORS';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\n","import { GET_ERRORS, RESET_ERRORS } from '../utils/constants';\n\nexport const getErrors = (errors) => ({\n  type: GET_ERRORS,\n  errors\n});\n\nexport const resetErrors = () => ({\n  type: RESET_ERRORS\n});\n","import { SIGN_IN, SIGN_OUT } from '../utils/constants';\n\nconst authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return action.user;\n    case SIGN_OUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { GET_ERRORS, RESET_ERRORS } from '../utils/constants';\n\nconst errorsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.errors;\n    case RESET_ERRORS:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default errorsReducer;\n","import { UPDATE_PROFILE } from '../utils/constants';\n\nconst profileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_PROFILE:\n      return { ...action.profile };\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from '../reducers/auth';\nimport errorsReducer from '../reducers/errors';\nimport profileReducer from '../reducers/profile';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  combineReducers({\n    auth: authReducer,\n    errors: errorsReducer,\n    profile: profileReducer\n  }),\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport store from '../store/store';\nimport { initiateGetProfile } from '../actions/profile';\nimport { signIn } from '../actions/auth';\nimport { history } from '../router/AppRouter';\n\nexport const validateFields = (fieldsToValidate) => {\n  return fieldsToValidate.every((field) => Object.values(field)[0] !== '');\n};\n\nexport const maintainSession = () => {\n  const user_token = localStorage.getItem('user_token');\n  if (user_token) {\n    const currentPath = window.location.pathname;\n    if (currentPath === '/' || currentPath === '/register') {\n      history.push('/profile');\n    }\n    const decoded = jwt_decode(user_token);\n    updateStore(decoded);\n  } else {\n    history.push('/');\n  }\n};\n\nexport const updateStore = (user) => {\n  const { userid, email } = user;\n  store.dispatch(\n    signIn({\n      userid,\n      email,\n      token: localStorage.getItem('user_token')\n    })\n  );\n  store.dispatch(initiateGetProfile(email));\n};\n\nexport const setAuthHeader = () => {\n  const token = localStorage.getItem('user_token');\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n};\n\nexport const removeAuthHeader = () => {\n  delete axios.defaults.headers.common['Authorization'];\n};\n","import axios from 'axios';\nimport { setAuthHeader, removeAuthHeader } from './common';\n\nexport const get = async (\n  url,\n  params,\n  shouldSetAuthHeader = true,\n  shouldRemoveAuthHeader = false\n) => {\n  if (shouldSetAuthHeader) {\n    setAuthHeader();\n  }\n  const result = await axios.get(url, params);\n  if (shouldRemoveAuthHeader) {\n    removeAuthHeader();\n  }\n  return result;\n};\n\nexport const post = async (\n  url,\n  params,\n  shouldSetAuthHeader = true,\n  shouldRemoveAuthHeader = false\n) => {\n  if (shouldSetAuthHeader) {\n    setAuthHeader();\n  }\n  const result = await axios.post(url, params);\n  if (shouldRemoveAuthHeader) {\n    removeAuthHeader();\n  }\n  return result;\n};\n\nexport const patch = async (\n  url,\n  params,\n  shouldSetAuthHeader = true,\n  shouldRemoveAuthHeader = false\n) => {\n  if (shouldSetAuthHeader) {\n    setAuthHeader();\n  }\n  const result = await axios.patch(url, params);\n  if (shouldRemoveAuthHeader) {\n    removeAuthHeader();\n  }\n  return result;\n};\n","import { BASE_API_URL } from '../utils/constants';\nimport { getErrors } from './errors';\nimport { UPDATE_PROFILE } from '../utils/constants';\nimport { get, post } from '../utils/api';\n\nexport const updateProfile = (profile) => ({\n  type: UPDATE_PROFILE,\n  profile\n});\n\nexport const initiateUpdateProfile = (profileData) => {\n  return async (dispatch) => {\n    try {\n      const profile = await post(`${BASE_API_URL}/profile`, profileData);\n      dispatch(updateProfile(profile.data));\n    } catch (error) {\n      error.response && dispatch(getErrors(error.response.data));\n    }\n  };\n};\n\nexport const initiateGetProfile = () => {\n  return async (dispatch) => {\n    try {\n      const profile = await get(`${BASE_API_URL}/profile`);\n      dispatch(updateProfile(profile.data));\n    } catch (error) {\n      error.response && dispatch(getErrors(error.response.data));\n    }\n  };\n};\n","import axios from 'axios';\nimport { SIGN_IN, SIGN_OUT, BASE_API_URL } from '../utils/constants';\nimport { initiateGetProfile } from './profile';\nimport { history } from '../router/AppRouter';\nimport { getErrors } from './errors';\nimport { post } from '../utils/api';\n\nexport const signIn = (user) => ({\n  type: SIGN_IN,\n  user\n});\n\nexport const initiateLogin = (email, password) => {\n  return async (dispatch) => {\n    try {\n      const result = await axios.post(`${BASE_API_URL}/signin`, {\n        email,\n        password\n      });\n      const user = result.data;\n      localStorage.setItem('user_token', user.token);\n      dispatch(signIn(user));\n      dispatch(initiateGetProfile(user.email));\n      history.push('/profile');\n    } catch (error) {\n      console.log('error', error);\n      error.response && dispatch(getErrors(error.response.data));\n    }\n  };\n};\n\nexport const registerNewUser = (data) => {\n  return async (dispatch) => {\n    try {\n      await axios.post(`${BASE_API_URL}/signup`, data);\n      return { success: true };\n    } catch (error) {\n      console.log('error', error);\n      error.response && dispatch(getErrors(error.response.data));\n      return { success: false };\n    }\n  };\n};\n\nexport const signOut = () => ({\n  type: SIGN_OUT\n});\n\nexport const initiateLogout = () => {\n  return async (dispatch) => {\n    try {\n      await post(`${BASE_API_URL}/logout`, true, true);\n      localStorage.removeItem('user_token');\n      return dispatch(signOut());\n    } catch (error) {\n      error.response && dispatch(getErrors(error.response.data));\n    }\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Button } from 'react-bootstrap';\nimport { initiateLogin } from '../actions/auth';\nimport { resetErrors } from '../actions/errors';\nimport { validateFields } from '../utils/common';\nimport { Link } from 'react-router-dom';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    errorMsg: ''\n  };\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\n      this.setState({ errorMsg: this.props.errors });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(resetErrors());\n  }\n\n  handleLogin = (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    const fieldsToValidate = [{ email }, { password }];\n\n    const allFieldsEntered = validateFields(fieldsToValidate);\n    if (!allFieldsEntered) {\n      this.setState({\n        errorMsg: {\n          signin_error: 'Please enter all the fields.'\n        }\n      });\n    } else {\n      this.setState({\n        errorMsg: {\n          signin_error: ''\n        }\n      });\n      // login successful\n      this.props.dispatch(initiateLogin(email, password));\n    }\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { errorMsg } = this.state;\n    return (\n      <div className=\"login-page\">\n        <h1>Banking Application</h1>\n        <div className=\"login-form\">\n          <Form onSubmit={this.handleLogin}>\n            {errorMsg && errorMsg.signin_error && (\n              <p className=\"errorMsg centered-message\">\n                {errorMsg.signin_error}\n              </p>\n            )}\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <div className=\"action-items\">\n              <Button variant=\"primary\" type=\"submit\">\n                Login\n              </Button>\n              <Link to=\"/register\" className=\"btn btn-secondary\">\n                Create account\n              </Link>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Button } from 'react-bootstrap';\nimport { registerNewUser } from '../actions/auth';\nimport { resetErrors } from '../actions/errors';\nimport { validateFields } from '../utils/common';\nimport { Link } from 'react-router-dom';\n\nclass Register extends React.Component {\n  state = {\n    first_name: '',\n    last_name: '',\n    email: '',\n    password: '',\n    cpassword: '',\n    successMsg: '',\n    errorMsg: '',\n    isSubmitted: false\n  };\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\n      this.setState({ errorMsg: this.props.errors });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(resetErrors());\n  }\n\n  registerUser = (event) => {\n    event.preventDefault();\n    const { first_name, last_name, email, password, cpassword } = this.state;\n\n    const fieldsToValidate = [\n      { first_name },\n      { last_name },\n      { email },\n      { password },\n      { cpassword }\n    ];\n\n    const allFieldsEntered = validateFields(fieldsToValidate);\n    if (!allFieldsEntered) {\n      this.setState({\n        errorMsg: {\n          signup_error: 'Please enter all the fields.'\n        }\n      });\n    } else {\n      if (password !== cpassword) {\n        this.setState({\n          errorMsg: {\n            signup_error: 'Password and confirm password does not match.'\n          }\n        });\n      } else {\n        this.setState({ isSubmitted: true });\n        this.props\n          .dispatch(registerNewUser({ first_name, last_name, email, password }))\n          .then((response) => {\n            if (response.success) {\n              this.setState({\n                successMsg: 'User registered successfully.',\n                errorMsg: ''\n              });\n            }\n          });\n      }\n    }\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { errorMsg, successMsg, isSubmitted } = this.state;\n    return (\n      <div className=\"login-page\">\n        <h2>Register User</h2>\n        <div className=\"login-form\">\n          <Form onSubmit={this.registerUser}>\n            {errorMsg && errorMsg.signup_error ? (\n              <p className=\"errorMsg centered-message\">\n                {errorMsg.signup_error}\n              </p>\n            ) : (\n              isSubmitted && (\n                <p className=\"successMsg centered-message\">{successMsg}</p>\n              )\n            )}\n            <Form.Group controlId=\"first_name\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"first_name\"\n                placeholder=\"Enter first name\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"last_name\">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"last_name\"\n                placeholder=\"Enter last name\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"cpassword\">\n              <Form.Label>Confirm password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"cpassword\"\n                placeholder=\"Enter confirm password\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <div className=\"action-items\">\n              <Button variant=\"primary\" type=\"submit\">\n                Register\n              </Button>\n              <Link to=\"/\" className=\"btn btn-secondary\">\n                Login\n              </Link>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(Register);\n","import React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { initiateUpdateProfile } from '../actions/profile';\nimport { validateFields } from '../utils/common';\nimport { resetErrors } from '../actions/errors';\n\nclass Profile extends React.Component {\n  state = {\n    first_name: '',\n    last_name: '',\n    email: '',\n    errorMsg: '',\n    isSubmitted: false\n  };\n\n  componentDidMount() {\n    const { profile } = this.props;\n    if (!_.isEmpty(profile)) {\n      const { first_name, last_name, email } = profile;\n      this.setState({\n        first_name,\n        last_name,\n        email\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\n      this.setState({\n        errorMsg: this.props.errors\n      });\n    }\n    if (!_.isEqual(prevProps.profile, this.props.profile)) {\n      const { first_name, last_name, email } = this.props.profile;\n      this.setState({ first_name, last_name, email });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(resetErrors());\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { first_name, last_name } = this.state;\n    const profileData = {\n      first_name,\n      last_name\n    };\n\n    const fieldsToValidate = [{ first_name }, { last_name }];\n\n    const allFieldsEntered = validateFields(fieldsToValidate);\n    if (!allFieldsEntered) {\n      this.setState({\n        errorMsg: {\n          update_error: 'Please enter all the fields.'\n        }\n      });\n    } else {\n      this.setState({ isSubmitted: true, errorMsg: '' });\n      this.props.dispatch(initiateUpdateProfile(profileData));\n    }\n  };\n\n  handleOnChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { errorMsg, first_name, last_name, email, isSubmitted } = this.state;\n    return (\n      <div className=\"col-md-6 offset-md-3\">\n        <Form onSubmit={this.handleSubmit} className=\"profile-form\">\n          {errorMsg && errorMsg.update_error ? (\n            <p className=\"errorMsg centered-message\">{errorMsg.update_error}</p>\n          ) : (\n            isSubmitted && (\n              <p className=\"successMsg centered-message\">\n                Profile updated successfully.\n              </p>\n            )\n          )}\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email address:</Form.Label>\n            <span className=\"label-value\">{email}</span>\n          </Form.Group>\n          <Form.Group controlId=\"first_name\">\n            <Form.Label>First name:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"first_name\"\n              placeholder=\"Enter your first name\"\n              value={first_name}\n              onChange={this.handleOnChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"last_name\">\n            <Form.Label>Last name:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"last_name\"\n              placeholder=\"Enter your last name\"\n              value={last_name}\n              onChange={this.handleOnChange}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(Profile);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Banking Application</h1>\n      <div className=\"links\">\n        <Link to=\"/profile\" className=\"link\">\n          Profile\n        </Link>\n        <Link to=\"/logout\" className=\"link\">\n          Logout\n        </Link>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { initiateLogout } from '../actions/auth';\n\nclass Logout extends React.Component {\n  componentDidMount() {\n    const { history, dispatch } = this.props;\n    dispatch(initiateLogout()).then(() => history.push('/'));\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default connect()(Logout);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { createBrowserHistory } from 'history';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Login from '../components/Login';\nimport Register from '../components/Register';\nimport Profile from '../components/Profile';\nimport Header from '../components/Header';\nimport Logout from '../components/Logout';\n\nexport const history = createBrowserHistory();\n\nconst AppRouter = ({ auth }) => {\n  return (\n    <Router history={history}>\n      <div>\n        {!_.isEmpty(auth.token) && <Header />}\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/\" component={Login} exact={true} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/profile\" component={Profile} />\n            <Route path=\"/logout\" component={Logout} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(AppRouter);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/main.scss';\nimport { maintainSession } from './utils/common';\n\nmaintainSession();\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}